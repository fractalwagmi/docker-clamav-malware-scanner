const {logger} = require('./logger.js');
const unzip = require('unzip-stream');

/**
 * @param {*} scanner
 * @param {*} readstream
 * @param {number} totalSize
 * @param {number} timeoutPerFile
 * @return {Promise<Array<string>>} collection of clamd results
 */
function scanGcsZipFile(scanner, readstream, totalSize, timeoutPerFile) {
  const results = [];

  return new Promise((resolve, reject) => {
    // eslint-disable-next-line new-cap
    readstream.pipe(unzip.Parse()).on('entry', async (entry) => {
      if (entry.type === 'File') {
        logger.info(`Scanning ${entry.path} with size ${entry.size}`);
        const result = await scanner.scanStream(entry, timeoutPerFile);
        results.push({result, fileName: entry.path});
        logger.info(`Finished scanning ${entry.path} with result ${result}`);
      } else {
        entry.autodrain();
      }
    }).on('close', () => {
      logger.info(`Finished scanning ${totalSize} bytes`);
      resolve(results);
    }).on('error', (err) => {
      logger.error(`Error scanning zip file: ${err}`);
      reject(err);
    });
  });
}

module.exports = scanGcsZipFile;
